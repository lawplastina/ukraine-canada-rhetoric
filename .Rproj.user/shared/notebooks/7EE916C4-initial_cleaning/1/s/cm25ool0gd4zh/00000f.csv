"0","ru_transcripts_unfiltered <- ndjson::stream_in(normalizePath(""C:/Users/12015/Desktop/popova_beland/kremlin/kremlin_transcripts.json""))"
"0",""
"0","ru_transcripts_mid <- ru_transcripts_unfiltered %>%"
"0","  mutate(date_parsed = ymd_hms(date),"
"0","         teaser = na_if(teaser, """"),"
"0","         transcript_filtered = na_if(transcript_filtered, """"),"
"0","         type = ""publication"","
"0","         person = ""putin"") %>% #IS THIS RIGHT?? CHECK"
"0","  select(-starts_with(c(""wordlist"", ""tags"", ""persons"")), -place, -date, -kremlin_id, -teaser)"
"0",""
"0","zakharova_unfiltered <- read.csv(""C:/Users/12015/Desktop/popova_beland/MariaVladimirovnaZakharova/MariaVladimirovnaZakharova.csv"")"
"0",""
"0","zakharova <- zakharova_unfiltered %>%"
"0","  mutate(date_parsed = ymd_hms(date),"
"0","         message = na_if(message, """"),"
"0","         media_type = na_if(media_type, """"),"
"0","         type = ""telegram"","
"0","         person = ""zakharova"","
"0","         transcript_filtered_int = message,"
"0","         transcript_filtered ="
"0","           str_remove_all(transcript_filtered_int, ""https://[^\\s\""'>]+""),"
"0","         transcript_filtered = na_if(transcript_filtered, """")"
"0","         ) %>%"
"0","  select(-first_name, -last_name, -username, "
"0","         -media_path, -reply_to, -date, -message_id, "
"0","         -media_type, -id, -sender_id, -message, -transcript_filtered_int) %>%"
"0","  filter(!is.na(transcript_filtered))"
"0",""
"0","# Now attaching Zakharova df to ru_transcripts"
"0","ru_transcripts_old <- full_join(ru_transcripts_mid, zakharova)"
"2","Joining with `by = join_by(transcript_filtered, date_parsed, type, person)`"
"0","lavrov_unfiltered <- ndjson::stream_in(normalizePath(""C:/Users/12015/Desktop/popova_beland/data_raw/transcripts.ndjson"")) %>%"
"0","  mutate(type = ""publication"","
"0","         person = ""lavrov"") %>%"
"0","  select(-speaker)"
"0","  "
"0",""
"0","pattern <- "",\\s*([А-Яа-яЁё\\-\\s]+?)?\\s*,?\\s*(\\d{1,2}\\s+[а-яё]+\\s+\\d{4})\\s+года"""
"0",""
"0","# Extract location and date"
"0","matches <- as.data.frame(str_match(lavrov_unfiltered$title, pattern))"
"0",""
"0","lavrov_intermediate <- lavrov_unfiltered %>%"
"0","  mutate(location = matches$V2,"
"0","         date_ru = matches$V3,"
"0","         transcript_unfiltered = content,"
"0","         title = "
"0","           str_remove_all(title, "",\\s*([А-Яа-яЁё\\-\\s]+?)?\\s*,?\\s*(\\d{1,2}\\s+[а-яё]+\\s+\\d{4})\\s+года""))"
"0",""
"0","month_map <- c("
"0","  ""января"" = ""01"", ""февраля"" = ""02"", ""марта"" = ""03"","
"0","  ""апреля"" = ""04"", ""мая"" = ""05"", ""июня"" = ""06"","
"0","  ""июля"" = ""07"", ""августа"" = ""08"", ""сентября"" = ""09"","
"0","  ""октября"" = ""10"", ""ноября"" = ""11"", ""декабря"" = ""12"""
"0",")"
"0",""
"0","iso_dates <- sapply(lavrov_intermediate$date_ru, function(date) {"
"0","  if (is.na(date)) return(NA)  # Early return if NA"
"0",""
"0","  parts <- str_split(str_trim(date), ""\\s+"", simplify = TRUE)"
"0","  "
"0","  if (ncol(parts) < 3) {"
"0","    warning(paste(""Skipping malformed date:"", date))"
"0","    return(NA)"
"0","  }"
"0","  "
"0","  day <- sprintf(""%02d"", as.integer(parts[1]))"
"0","  month_raw <- str_trim(parts[2])"
"0","  month <- month_map[[month_raw]]"
"0","  "
"0","  if (is.null(month)) {"
"0","    warning(paste(""Unknown month name:"", month_raw))"
"0","    return(NA)"
"0","  }"
"0","  "
"0","  year <- parts[3]"
"0","  paste0(year, ""-"", month, ""-"", day)"
"0","})"
"0",""
"0","lavrov <- lavrov_intermediate %>%"
"0","  mutate(date = iso_dates,"
"0","         date_parsed = ymd(date)) %>%"
"0","  select(-location, -content, -date, -date_ru) # removing location - optional"
"0",""
"0","ru_transcripts <- full_join(ru_transcripts_old, lavrov)"
"2","Joining with `by = join_by(title, transcript_unfiltered, date_parsed, type, person)`"
